//// Линейная сложность O(n)
// Линейный рост - это понятие, которое описывает зависимость между двумя величинами, при которой одна величина увеличивается пропорционально увеличению другой.
// Оценка временной сложности O(n) означает, что время выполнения алгоритма растет линейно с увеличением размера входных данных.

// Пример:
// Поиск максимального значения в массиве

const forOn = [ 1, 2, 3, 4, 54, 6, 7, 8, 9, 123, 4342, 4354, 0, 1, 2, 3, 4, 54, 6, 7, 8, 9, 123, 4342, 4354, 0 ];

function findMax(arr) {
    console.time('findMax');
    let max = arr[0];                        // Предполагаем, что первый элемент массива будет иметь максимальное значение 
    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > max) {
            max = arr[i];                    // Если нашли что-то больше, то задаем новое значение 
        }
    }
    console.log(max);
    console.timeEnd('findMax');
};

findMax(forOn); // 4354
                // findMax: 8.388ms


// Алгоритм начинает с предположения, что первый элемент массива (arr[0]) является максимальным, а затем линейно (то есть по одному элементу) 
// перебирает остальные элементы, сравнивая каждый с текущим максимальным. Сложность этого алгоритма O(n), так как время выполнения растет линейно 
// с увеличением количества элементов в массиве arr.