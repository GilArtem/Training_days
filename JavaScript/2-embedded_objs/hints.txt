1. Proxy.
  - представляет объект, который позволяет перехватывать выполнение операций 
    по отношению к некоторому другому объекту и может переопределять его поведение.
  
  Вот несколько областей практического применения прокси-объектов в JS:

1) Безопасность. 
   Прокси позволяют организовать проверку аргументов функций и значений свойств объектов.
2) Хранение данных. 
   Прокси-функция может вызываться при попытках модификации свойств объектов и создавать резервные копии данных.
3) Статистика. 
   Прокси-объекты позволяют собирать статистические сведения об объектах, с которыми взаимодействуют пользователи или некие программные механизмы приложений.
4) Учёт контекста. 
   Различные прокси можно использовать для различных контекстов выполнения программ. Скажем, это может быть контекст отладки или контекст продакшн-среды. 
   В случае с отладкой прокси могут, например, представлять значения переменных и давать возможности прямого воздействия на содержимое объектов.
5) Шаблон проектирования «посредник». 
   Прокси являются посредниками, используемыми для работы с представляемыми ими объектами, позволяющими объектам взаимодействовать не напрямую, а через них. 
   В результате, при использовании прокси, не нужно описывать механизмы непосредственного взаимодействия объектов друг с другом.
6) Управление доступом. 
   При организации доступа к свойствам объектов через прокси можно управлять происходящим, например, запрещать пользователю или группе пользователей доступ к объекту.
   Эти ограничения можно вводить либо на основании внутренней логики прокси-объектов, либо отдавая этим объектам явные команды, касающиеся ограничения доступа к целевым объектам.

Еще одна статься для ознакомления:
https://habr.com/ru/companies/ruvds/articles/347754/

2. Symbol.
  -  представляет некоторое уникальное значение.
  Основной областью применения символов являются определение идентификаторов свойств объектов.
  