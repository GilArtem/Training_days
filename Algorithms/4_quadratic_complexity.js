//// Квадратичная сложность O(n^2)
// Время выполнения растет пропорционально квадрату размера входных данных.

// Пример:
// Алгоритмы с вложенными циклами, когда каждый элемент первого списка обрабатывается с каждым элементом второго списка.

const forOn2 = [1, 2, 4, 5, 6, 7];

function sumOfPairs (arr) {
    console.time('sumOfPairs');
    let sum = 0;
    for (let i = 0; i < arr.length; i++) {
        for (let j = 0; j < arr.length; j++) {
            sum += arr[i] + arr[j];
        }
    }
    console.log(sum);
    console.timeEnd('sumOfPairs');
};

sumOfPairs(forOn2); // 300
                    // sumOfPairs: 8.642ms


// Этот код имеет два вложенных цикла, каждый из которых проходится по всему массиву. 
// Количество операций в циклах равно n * n, где n - это длина массива. Это приводит к 
// квадратичной сложности O(n^2), что может сделать его неэффективным для больших массивов 
// из-за большого количества операций, выполняемых на каждый элемент.